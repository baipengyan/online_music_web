<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.mapper.MusicMapper" >
  <resultMap id="BaseResultMap" type="com.demo.pojo.Music" >
    <id column="music_id" property="musicId" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="CHAR" />
    <result column="author" property="author" jdbcType="CHAR" />
    <result column="publisher" property="publisher" jdbcType="CHAR" />
    <result column="time" property="time" jdbcType="DOUBLE" />
    <result column="src" property="src" jdbcType="VARCHAR" />
    <result column="lyric_src" property="lyricSrc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    music_id, name, author, publisher, time, src, lyric_src
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.demo.pojo.MusicExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from music
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from music
    where music_id = #{musicId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from music
    where music_id = #{musicId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.demo.pojo.MusicExample" >
    delete from music
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demo.pojo.Music" >
    insert into music (music_id, name, author, 
      publisher, time, src, lyric_src
      )
    values (#{musicId,jdbcType=CHAR}, #{name,jdbcType=CHAR}, #{author,jdbcType=CHAR}, 
      #{publisher,jdbcType=CHAR}, #{time,jdbcType=DOUBLE}, #{src,jdbcType=VARCHAR}, #{lyricSrc,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.demo.pojo.Music" >
    insert into music
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="musicId != null" >
        music_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="publisher != null" >
        publisher,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="src != null" >
        src,
      </if>
      <if test="lyricSrc != null" >
        lyric_src,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="musicId != null" >
        #{musicId,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=CHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=CHAR},
      </if>
      <if test="publisher != null" >
        #{publisher,jdbcType=CHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=DOUBLE},
      </if>
      <if test="src != null" >
        #{src,jdbcType=VARCHAR},
      </if>
      <if test="lyricSrc != null" >
        #{lyricSrc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.demo.pojo.MusicExample" resultType="java.lang.Integer" >
    select count(*) from music
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update music
    <set >
      <if test="record.musicId != null" >
        music_id = #{record.musicId,jdbcType=CHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=CHAR},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=CHAR},
      </if>
      <if test="record.publisher != null" >
        publisher = #{record.publisher,jdbcType=CHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=DOUBLE},
      </if>
      <if test="record.src != null" >
        src = #{record.src,jdbcType=VARCHAR},
      </if>
      <if test="record.lyricSrc != null" >
        lyric_src = #{record.lyricSrc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update music
    set music_id = #{record.musicId,jdbcType=CHAR},
      name = #{record.name,jdbcType=CHAR},
      author = #{record.author,jdbcType=CHAR},
      publisher = #{record.publisher,jdbcType=CHAR},
      time = #{record.time,jdbcType=DOUBLE},
      src = #{record.src,jdbcType=VARCHAR},
      lyric_src = #{record.lyricSrc,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.pojo.Music" >
    update music
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=CHAR},
      </if>
      <if test="publisher != null" >
        publisher = #{publisher,jdbcType=CHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=DOUBLE},
      </if>
      <if test="src != null" >
        src = #{src,jdbcType=VARCHAR},
      </if>
      <if test="lyricSrc != null" >
        lyric_src = #{lyricSrc,jdbcType=VARCHAR},
      </if>
    </set>
    where music_id = #{musicId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.pojo.Music" >
    update music
    set name = #{name,jdbcType=CHAR},
      author = #{author,jdbcType=CHAR},
      publisher = #{publisher,jdbcType=CHAR},
      time = #{time,jdbcType=DOUBLE},
      src = #{src,jdbcType=VARCHAR},
      lyric_src = #{lyricSrc,jdbcType=VARCHAR}
    where music_id = #{musicId,jdbcType=CHAR}
  </update>
</mapper>